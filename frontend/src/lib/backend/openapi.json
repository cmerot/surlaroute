{
	"openapi": "3.1.0",
	"info": { "title": "Sur la route", "version": "0.1.0" },
	"paths": {
		"/api/login/access-token": {
			"post": {
				"tags": ["login"],
				"summary": "Access Token",
				"description": "OAuth2 compatible token login, get an access token for future requests",
				"operationId": "login-access_token",
				"requestBody": {
					"content": {
						"application/x-www-form-urlencoded": {
							"schema": { "$ref": "#/components/schemas/Body_login-access_token" }
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": { "schema": { "$ref": "#/components/schemas/Token" } }
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			}
		},
		"/api/login/test-token": {
			"post": {
				"tags": ["login"],
				"summary": "Test Token",
				"description": "Test access token",
				"operationId": "login-test_token",
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": { "schema": { "$ref": "#/components/schemas/UserPublic" } }
						}
					}
				},
				"security": [{ "OAuth2PasswordBearer": [] }]
			}
		},
		"/api/password-recovery/{email}": {
			"post": {
				"tags": ["login"],
				"summary": "Recover Password",
				"description": "Password Recovery",
				"operationId": "login-recover_password",
				"parameters": [
					{
						"name": "email",
						"in": "path",
						"required": true,
						"schema": { "type": "string", "title": "Email" }
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": { "schema": { "$ref": "#/components/schemas/Message" } }
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			}
		},
		"/api/reset-password/": {
			"post": {
				"tags": ["login"],
				"summary": "Reset Password",
				"description": "Reset password",
				"operationId": "login-reset_password",
				"requestBody": {
					"content": {
						"application/json": { "schema": { "$ref": "#/components/schemas/NewPassword" } }
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": { "schema": { "$ref": "#/components/schemas/Message" } }
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			}
		},
		"/api/password-recovery-html-content/{email}": {
			"post": {
				"tags": ["login"],
				"summary": "Recover Password Html Content",
				"description": "HTML Content for Password Recovery",
				"operationId": "login-recover_password_html_content",
				"security": [{ "OAuth2PasswordBearer": [] }],
				"parameters": [
					{
						"name": "email",
						"in": "path",
						"required": true,
						"schema": { "type": "string", "title": "Email" }
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": { "text/html": { "schema": { "type": "string" } } }
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			}
		},
		"/api/users/": {
			"get": {
				"tags": ["users"],
				"summary": "Read",
				"description": "Read users.",
				"operationId": "users-read",
				"security": [{ "OAuth2PasswordBearer": [] }],
				"parameters": [
					{
						"name": "skip",
						"in": "query",
						"required": false,
						"schema": { "type": "integer", "default": 0, "title": "Skip" }
					},
					{
						"name": "limit",
						"in": "query",
						"required": false,
						"schema": { "type": "integer", "default": 100, "title": "Limit" }
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": { "schema": { "$ref": "#/components/schemas/UsersPublic" } }
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			},
			"post": {
				"tags": ["users"],
				"summary": "Create",
				"description": "Create new user.",
				"operationId": "users-create",
				"security": [{ "OAuth2PasswordBearer": [] }],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": { "schema": { "$ref": "#/components/schemas/UserCreate" } }
					}
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": { "schema": { "$ref": "#/components/schemas/UserPublic" } }
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			}
		},
		"/api/users/me": {
			"get": {
				"tags": ["users"],
				"summary": "Read Me",
				"description": "Get current user.",
				"operationId": "users-read_me",
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": { "schema": { "$ref": "#/components/schemas/UserPublic" } }
						}
					}
				},
				"security": [{ "OAuth2PasswordBearer": [] }]
			},
			"delete": {
				"tags": ["users"],
				"summary": "Delete Me",
				"description": "Delete own user.",
				"operationId": "users-delete_me",
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": { "schema": { "$ref": "#/components/schemas/Message" } }
						}
					}
				},
				"security": [{ "OAuth2PasswordBearer": [] }]
			},
			"patch": {
				"tags": ["users"],
				"summary": "Update Me",
				"description": "Update own user.",
				"operationId": "users-update_me",
				"requestBody": {
					"content": {
						"application/json": { "schema": { "$ref": "#/components/schemas/UserUpdateMe" } }
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": { "schema": { "$ref": "#/components/schemas/UserPublic" } }
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				},
				"security": [{ "OAuth2PasswordBearer": [] }]
			}
		},
		"/api/users/me/password": {
			"patch": {
				"tags": ["users"],
				"summary": "Update Password Me",
				"description": "Update own password.",
				"operationId": "users-update_password_me",
				"requestBody": {
					"content": {
						"application/json": { "schema": { "$ref": "#/components/schemas/UpdatePassword" } }
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": { "schema": { "$ref": "#/components/schemas/Message" } }
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				},
				"security": [{ "OAuth2PasswordBearer": [] }]
			}
		},
		"/api/users/signup": {
			"post": {
				"tags": ["users"],
				"summary": "Register",
				"description": "Create new user without the need to be logged in.",
				"operationId": "users-register",
				"requestBody": {
					"content": {
						"application/json": { "schema": { "$ref": "#/components/schemas/UserRegister" } }
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": { "schema": { "$ref": "#/components/schemas/UserPublic" } }
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			}
		},
		"/api/users/{user_id}": {
			"get": {
				"tags": ["users"],
				"summary": "Read By Id",
				"description": "Get a specific user by id.",
				"operationId": "users-read_by_id",
				"security": [{ "OAuth2PasswordBearer": [] }],
				"parameters": [
					{
						"name": "user_id",
						"in": "path",
						"required": true,
						"schema": { "type": "string", "format": "uuid", "title": "User Id" }
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": { "schema": { "$ref": "#/components/schemas/UserPublic" } }
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			},
			"patch": {
				"tags": ["users"],
				"summary": "Update",
				"description": "Update a user.",
				"operationId": "users-update",
				"security": [{ "OAuth2PasswordBearer": [] }],
				"parameters": [
					{
						"name": "user_id",
						"in": "path",
						"required": true,
						"schema": { "type": "string", "format": "uuid", "title": "User Id" }
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": { "schema": { "$ref": "#/components/schemas/UserUpdate" } }
					}
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": { "schema": { "$ref": "#/components/schemas/UserPublic" } }
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			},
			"delete": {
				"tags": ["users"],
				"summary": "Delete",
				"description": "Delete a user.",
				"operationId": "users-delete",
				"security": [{ "OAuth2PasswordBearer": [] }],
				"parameters": [
					{
						"name": "user_id",
						"in": "path",
						"required": true,
						"schema": { "type": "string", "format": "uuid", "title": "User Id" }
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": { "schema": { "$ref": "#/components/schemas/Message" } }
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			}
		},
		"/api/utils/test-email/": {
			"post": {
				"tags": ["utils"],
				"summary": "Test Email",
				"description": "Test emails.",
				"operationId": "utils-test_email",
				"security": [{ "OAuth2PasswordBearer": [] }],
				"parameters": [
					{
						"name": "email_to",
						"in": "query",
						"required": true,
						"schema": { "type": "string", "format": "email", "title": "Email To" }
					}
				],
				"responses": {
					"201": {
						"description": "Successful Response",
						"content": {
							"application/json": { "schema": { "$ref": "#/components/schemas/Message" } }
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			}
		},
		"/api/utils/health-check/": {
			"get": {
				"tags": ["utils"],
				"summary": "Health Check",
				"operationId": "utils-health_check",
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": { "type": "boolean", "title": "Response Utils-Health Check" }
							}
						}
					}
				}
			}
		},
		"/api/utils/load-fixtures": {
			"get": {
				"tags": ["utils"],
				"summary": "Load Fixtures",
				"operationId": "utils-load_fixtures",
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": { "schema": { "title": "Response Utils-Load Fixtures" } }
						}
					}
				}
			}
		},
		"/api/directory/activities/": {
			"get": {
				"tags": ["activities"],
				"summary": "Read Activities",
				"description": "Read all activities.",
				"operationId": "activities-read_activities",
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": { "schema": { "$ref": "#/components/schemas/ActivitiesPublic" } }
						}
					}
				}
			},
			"post": {
				"tags": ["activities"],
				"summary": "Create Activity",
				"description": "Create an activity.",
				"operationId": "activities-create_activity",
				"requestBody": {
					"content": {
						"application/json": { "schema": { "$ref": "#/components/schemas/ActivityCreate" } }
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": { "schema": { "$ref": "#/components/schemas/ActivityPublic" } }
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			}
		},
		"/api/directory/activities/{path}": {
			"patch": {
				"tags": ["activities"],
				"summary": "Update Activity",
				"description": "Update an activity.\n\nIf the name or the parent path is patched, it will also update children.",
				"operationId": "activities-update_activity",
				"parameters": [
					{
						"name": "path",
						"in": "path",
						"required": true,
						"schema": { "type": "string", "title": "Path" }
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": { "schema": { "$ref": "#/components/schemas/ActivityUpdate" } }
					}
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/ActivityUpdateResponse" }
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			},
			"get": {
				"tags": ["activities"],
				"summary": "Read Activities By Path",
				"description": "Read activities from a path.",
				"operationId": "activities-read_activities_by_path",
				"parameters": [
					{
						"name": "path",
						"in": "path",
						"required": true,
						"schema": { "type": "string", "title": "Path" }
					},
					{
						"name": "descendant",
						"in": "query",
						"required": false,
						"schema": { "type": "boolean", "default": false, "title": "Descendant" }
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{ "$ref": "#/components/schemas/ActivitiesPublic" },
										{ "$ref": "#/components/schemas/ActivityPublic" }
									],
									"title": "Response Activities-Read Activities By Path"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			},
			"delete": {
				"tags": ["activities"],
				"summary": "Delete Activity",
				"description": "Delete an activity and its children.",
				"operationId": "activities-delete_activity",
				"parameters": [
					{
						"name": "path",
						"in": "path",
						"required": true,
						"schema": { "type": "string", "title": "Path" }
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/ActivityDeleteResponse" }
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			}
		},
		"/api/directory/people/": {
			"post": {
				"tags": ["people"],
				"summary": "Create Person",
				"description": "Create a person.",
				"operationId": "people-create_person",
				"requestBody": {
					"required": true,
					"content": {
						"application/json": { "schema": { "$ref": "#/components/schemas/PersonCreate" } }
					}
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": { "schema": { "$ref": "#/components/schemas/PersonPublic" } }
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			},
			"get": {
				"tags": ["people"],
				"summary": "Read People",
				"description": "Read paginated people.",
				"operationId": "people-read_people",
				"parameters": [
					{
						"name": "q",
						"in": "query",
						"required": false,
						"schema": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Q" }
					},
					{
						"name": "limit",
						"in": "query",
						"required": false,
						"schema": {
							"type": "integer",
							"maximum": 100,
							"exclusiveMinimum": 0,
							"default": 100,
							"title": "Limit"
						}
					},
					{
						"name": "offset",
						"in": "query",
						"required": false,
						"schema": { "type": "integer", "minimum": 0, "default": 0, "title": "Offset" }
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/PagedResponse_PersonPublic_" }
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			}
		},
		"/api/directory/people/{id}": {
			"get": {
				"tags": ["people"],
				"summary": "Read Person By Id",
				"description": "Read a person by its id.",
				"operationId": "people-read_person_by_id",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": { "type": "string", "format": "uuid", "title": "Id" }
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": { "schema": { "$ref": "#/components/schemas/PersonPublic" } }
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			},
			"patch": {
				"tags": ["people"],
				"summary": "Update Person",
				"description": "Update a person.",
				"operationId": "people-update_person",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": { "type": "string", "format": "uuid", "title": "Id" }
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": { "schema": { "$ref": "#/components/schemas/PersonUpdate" } }
					}
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/UpdateResponse_PersonPublic_" }
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			},
			"delete": {
				"tags": ["people"],
				"summary": "Delete Person",
				"description": "Delete a person.",
				"operationId": "people-delete_person",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": { "type": "string", "format": "uuid", "title": "Id" }
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": { "schema": { "$ref": "#/components/schemas/DeleteResponse" } }
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			}
		},
		"/api/directory/organisations/": {
			"post": {
				"tags": ["organisations"],
				"summary": "Create Organisation",
				"description": "Create an organisation.",
				"operationId": "organisations-create_organisation",
				"requestBody": {
					"required": true,
					"content": {
						"application/json": { "schema": { "$ref": "#/components/schemas/OrganisationCreate" } }
					}
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/OrganisationPublic" }
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			},
			"get": {
				"tags": ["organisations"],
				"summary": "Read Organisations",
				"description": "Read paginated organisations.",
				"operationId": "organisations-read_organisations",
				"parameters": [
					{
						"name": "q",
						"in": "query",
						"required": false,
						"schema": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Q" }
					},
					{
						"name": "limit",
						"in": "query",
						"required": false,
						"schema": {
							"type": "integer",
							"maximum": 100,
							"exclusiveMinimum": 0,
							"default": 100,
							"title": "Limit"
						}
					},
					{
						"name": "offset",
						"in": "query",
						"required": false,
						"schema": { "type": "integer", "minimum": 0, "default": 0, "title": "Offset" }
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/PagedResponse_OrganisationPublic_" }
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			}
		},
		"/api/directory/organisations/{id}": {
			"get": {
				"tags": ["organisations"],
				"summary": "Read Organisation By Id",
				"description": "Read an organisation by its id.",
				"operationId": "organisations-read_organisation_by_id",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": { "type": "string", "format": "uuid", "title": "Id" }
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/OrganisationPublic" }
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			},
			"patch": {
				"tags": ["organisations"],
				"summary": "Update Organisation",
				"description": "Update an organisation.",
				"operationId": "organisations-update_organisation",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": { "type": "string", "format": "uuid", "title": "Id" }
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": { "schema": { "$ref": "#/components/schemas/OrganisationUpdate" } }
					}
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/UpdateResponse_OrganisationPublic_" }
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			},
			"delete": {
				"tags": ["organisations"],
				"summary": "Delete Organisation",
				"description": "Delete an organisation.",
				"operationId": "organisations-delete_organisation",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": { "type": "string", "format": "uuid", "title": "Id" }
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": { "schema": { "$ref": "#/components/schemas/DeleteResponse" } }
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			}
		}
	},
	"components": {
		"schemas": {
			"ActivitiesPublic": {
				"properties": {
					"data": {
						"items": { "$ref": "#/components/schemas/ActivityPublic" },
						"type": "array",
						"title": "Data"
					}
				},
				"type": "object",
				"required": ["data"],
				"title": "ActivitiesPublic"
			},
			"ActivityCreate": {
				"properties": {
					"name": { "type": "string", "title": "Name" },
					"parent_path": {
						"anyOf": [{ "type": "string", "examples": ["some.path"] }, { "type": "null" }],
						"title": "Parent Path"
					}
				},
				"type": "object",
				"required": ["name"],
				"title": "ActivityCreate"
			},
			"ActivityDeleteResponse": {
				"properties": { "rowcount": { "type": "integer", "title": "Rowcount" } },
				"type": "object",
				"required": ["rowcount"],
				"title": "ActivityDeleteResponse"
			},
			"ActivityPublic": {
				"properties": {
					"id": { "type": "string", "format": "uuid", "title": "Id" },
					"name": { "type": "string", "title": "Name" },
					"path": { "type": "string", "title": "Path", "examples": ["some.path"] }
				},
				"type": "object",
				"required": ["id", "name", "path"],
				"title": "ActivityPublic"
			},
			"ActivityUpdate": {
				"properties": {
					"name": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Name" },
					"parent_path": {
						"anyOf": [{ "type": "string", "examples": ["some.path"] }, { "type": "null" }],
						"title": "Parent Path"
					}
				},
				"type": "object",
				"title": "ActivityUpdate"
			},
			"ActivityUpdateResponse": {
				"properties": {
					"lca": {
						"anyOf": [{ "type": "string", "examples": ["some.path"] }, { "type": "null" }],
						"title": "Lca"
					},
					"rowcount": { "type": "integer", "title": "Rowcount" }
				},
				"type": "object",
				"required": ["lca", "rowcount"],
				"title": "ActivityUpdateResponse"
			},
			"Body_login-access_token": {
				"properties": {
					"grant_type": {
						"anyOf": [{ "type": "string", "pattern": "password" }, { "type": "null" }],
						"title": "Grant Type"
					},
					"username": { "type": "string", "title": "Username" },
					"password": { "type": "string", "title": "Password" },
					"scope": { "type": "string", "title": "Scope", "default": "" },
					"client_id": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "Client Id"
					},
					"client_secret": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "Client Secret"
					}
				},
				"type": "object",
				"required": ["username", "password"],
				"title": "Body_login-access_token"
			},
			"DeleteResponse": {
				"properties": {
					"success": { "type": "boolean", "title": "Success" },
					"message": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Message" }
				},
				"type": "object",
				"required": ["success"],
				"title": "DeleteResponse",
				"description": "Response schema for any paged API."
			},
			"HTTPValidationError": {
				"properties": {
					"detail": {
						"items": { "$ref": "#/components/schemas/ValidationError" },
						"type": "array",
						"title": "Detail"
					}
				},
				"type": "object",
				"title": "HTTPValidationError"
			},
			"Message": {
				"properties": { "message": { "type": "string", "title": "Message" } },
				"type": "object",
				"required": ["message"],
				"title": "Message"
			},
			"NewPassword": {
				"properties": {
					"token": { "type": "string", "title": "Token" },
					"new_password": {
						"type": "string",
						"maxLength": 40,
						"minLength": 8,
						"title": "New Password"
					}
				},
				"type": "object",
				"required": ["token", "new_password"],
				"title": "NewPassword"
			},
			"OrganisationCreate": {
				"properties": { "name": { "type": "string", "title": "Name" } },
				"type": "object",
				"required": ["name"],
				"title": "OrganisationCreate"
			},
			"OrganisationPublic": {
				"properties": {
					"id": { "type": "string", "format": "uuid", "title": "Id" },
					"name": { "type": "string", "title": "Name" }
				},
				"type": "object",
				"required": ["id", "name"],
				"title": "OrganisationPublic"
			},
			"OrganisationUpdate": {
				"properties": {
					"name": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Name" }
				},
				"type": "object",
				"title": "OrganisationUpdate"
			},
			"PagedResponse_OrganisationPublic_": {
				"properties": {
					"total": { "type": "integer", "title": "Total" },
					"limit": { "type": "integer", "title": "Limit" },
					"offset": { "type": "integer", "title": "Offset" },
					"results": {
						"items": { "$ref": "#/components/schemas/OrganisationPublic" },
						"type": "array",
						"title": "Results"
					}
				},
				"type": "object",
				"required": ["total", "limit", "offset", "results"],
				"title": "PagedResponse[OrganisationPublic]"
			},
			"PagedResponse_PersonPublic_": {
				"properties": {
					"total": { "type": "integer", "title": "Total" },
					"limit": { "type": "integer", "title": "Limit" },
					"offset": { "type": "integer", "title": "Offset" },
					"results": {
						"items": { "$ref": "#/components/schemas/PersonPublic" },
						"type": "array",
						"title": "Results"
					}
				},
				"type": "object",
				"required": ["total", "limit", "offset", "results"],
				"title": "PagedResponse[PersonPublic]"
			},
			"PersonCreate": {
				"properties": { "name": { "type": "string", "title": "Name" } },
				"type": "object",
				"required": ["name"],
				"title": "PersonCreate"
			},
			"PersonPublic": {
				"properties": {
					"id": { "type": "string", "format": "uuid", "title": "Id" },
					"name": { "type": "string", "title": "Name" }
				},
				"type": "object",
				"required": ["id", "name"],
				"title": "PersonPublic"
			},
			"PersonUpdate": {
				"properties": {
					"name": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Name" }
				},
				"type": "object",
				"title": "PersonUpdate"
			},
			"Token": {
				"properties": {
					"access_token": { "type": "string", "title": "Access Token" },
					"token_type": { "type": "string", "title": "Token Type", "default": "bearer" }
				},
				"type": "object",
				"required": ["access_token"],
				"title": "Token"
			},
			"UpdatePassword": {
				"properties": {
					"current_password": {
						"type": "string",
						"maxLength": 40,
						"minLength": 8,
						"title": "Current Password"
					},
					"new_password": {
						"type": "string",
						"maxLength": 40,
						"minLength": 8,
						"title": "New Password"
					}
				},
				"type": "object",
				"required": ["current_password", "new_password"],
				"title": "UpdatePassword"
			},
			"UpdateResponse_OrganisationPublic_": {
				"properties": {
					"success": { "type": "boolean", "title": "Success" },
					"data": {
						"anyOf": [{ "$ref": "#/components/schemas/OrganisationPublic" }, { "type": "null" }]
					},
					"message": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Message" }
				},
				"type": "object",
				"required": ["success"],
				"title": "UpdateResponse[OrganisationPublic]"
			},
			"UpdateResponse_PersonPublic_": {
				"properties": {
					"success": { "type": "boolean", "title": "Success" },
					"data": {
						"anyOf": [{ "$ref": "#/components/schemas/PersonPublic" }, { "type": "null" }]
					},
					"message": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Message" }
				},
				"type": "object",
				"required": ["success"],
				"title": "UpdateResponse[PersonPublic]"
			},
			"UserCreate": {
				"properties": {
					"email": { "type": "string", "maxLength": 255, "format": "email", "title": "Email" },
					"is_active": { "type": "boolean", "title": "Is Active", "default": true },
					"is_superuser": { "type": "boolean", "title": "Is Superuser", "default": false },
					"full_name": {
						"anyOf": [{ "type": "string", "maxLength": 255 }, { "type": "null" }],
						"title": "Full Name"
					},
					"password": { "type": "string", "maxLength": 40, "minLength": 8, "title": "Password" }
				},
				"type": "object",
				"required": ["email", "password"],
				"title": "UserCreate"
			},
			"UserPublic": {
				"properties": {
					"email": { "type": "string", "maxLength": 255, "format": "email", "title": "Email" },
					"is_active": { "type": "boolean", "title": "Is Active", "default": true },
					"is_superuser": { "type": "boolean", "title": "Is Superuser", "default": false },
					"full_name": {
						"anyOf": [{ "type": "string", "maxLength": 255 }, { "type": "null" }],
						"title": "Full Name"
					},
					"id": { "type": "string", "format": "uuid", "title": "Id" }
				},
				"type": "object",
				"required": ["email", "id"],
				"title": "UserPublic"
			},
			"UserRegister": {
				"properties": {
					"email": { "type": "string", "maxLength": 255, "format": "email", "title": "Email" },
					"password": { "type": "string", "maxLength": 40, "minLength": 8, "title": "Password" },
					"full_name": {
						"anyOf": [{ "type": "string", "maxLength": 255 }, { "type": "null" }],
						"title": "Full Name"
					}
				},
				"type": "object",
				"required": ["email", "password"],
				"title": "UserRegister"
			},
			"UserUpdate": {
				"properties": {
					"email": {
						"anyOf": [
							{ "type": "string", "maxLength": 255, "format": "email" },
							{ "type": "null" }
						],
						"title": "Email"
					},
					"is_active": { "type": "boolean", "title": "Is Active", "default": true },
					"is_superuser": { "type": "boolean", "title": "Is Superuser", "default": false },
					"full_name": {
						"anyOf": [{ "type": "string", "maxLength": 255 }, { "type": "null" }],
						"title": "Full Name"
					},
					"password": {
						"anyOf": [{ "type": "string", "maxLength": 40, "minLength": 8 }, { "type": "null" }],
						"title": "Password"
					}
				},
				"type": "object",
				"title": "UserUpdate"
			},
			"UserUpdateMe": {
				"properties": {
					"full_name": {
						"anyOf": [{ "type": "string", "maxLength": 255 }, { "type": "null" }],
						"title": "Full Name"
					},
					"email": {
						"anyOf": [
							{ "type": "string", "maxLength": 255, "format": "email" },
							{ "type": "null" }
						],
						"title": "Email"
					}
				},
				"type": "object",
				"title": "UserUpdateMe"
			},
			"UsersPublic": {
				"properties": {
					"data": {
						"items": { "$ref": "#/components/schemas/UserPublic" },
						"type": "array",
						"title": "Data"
					},
					"count": { "type": "integer", "title": "Count" }
				},
				"type": "object",
				"required": ["data", "count"],
				"title": "UsersPublic"
			},
			"ValidationError": {
				"properties": {
					"loc": {
						"items": { "anyOf": [{ "type": "string" }, { "type": "integer" }] },
						"type": "array",
						"title": "Location"
					},
					"msg": { "type": "string", "title": "Message" },
					"type": { "type": "string", "title": "Error Type" }
				},
				"type": "object",
				"required": ["loc", "msg", "type"],
				"title": "ValidationError"
			}
		},
		"securitySchemes": {
			"OAuth2PasswordBearer": {
				"type": "oauth2",
				"flows": { "password": { "scopes": {}, "tokenUrl": "/api/login/access-token" } }
			}
		}
	}
}
